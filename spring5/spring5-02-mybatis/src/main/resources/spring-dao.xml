<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">


  <!--DataSource: 使用Spring的数据源替换mybatis的配置 c3p0 dbcp druid-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
      <property name="url" value="jdbc:mysql://localhost:3306/mybatis?useSSl=true&amp;useUnicode=true&amp;characterEncoding=UTF-8"/>
      <property name="username" value="root"/>
      <property name="password" value="1234567890"/>
    </bean>


<!--sqlSessionFactory-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />

    <!--绑定mybatis配置文件-->
    <property name="configLocation" value="classpath:mybatis-config.xml"/>
    <property name="mapperLocations" value="classpath:mapper/*.xml"/>
  </bean>

  <!--SqlSessionTemplate 即sqlSession-->
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    <!--只能使用构造器注入sqlSessionFaction,因为没有set方法-->
    <constructor-arg index="0" ref="sqlSessionFactory"/>
  </bean>

<!--若使用id=userMapper2第二种方式通过继承SqlSessionDaoSupport这个类 那么这行配置可省去-->
  <bean id="userMapper" class="mapper.UserMapperImpl">
    <property name="sqlSession" ref="sqlSession"/>
  </bean>

  <!--配置声明式事务-->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <constructor-arg ref="dataSource"/>
  </bean>

  <!--结合AOP实现事务-->
  <!--配置事务类tx通知 导入tx标签库-->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!--给方法配置事务-->
    <tx:attributes>
      <tx:method name="add"/>
      <tx:method name="delete"/>
      <tx:method name="update"/>
      <tx:method name="query"/>
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>

  <!--配置事务切入-->
  <aop:config>
    <aop:pointcut id="txPointCut" expression="execution(* mapper.*.*(..))"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
  </aop:config>

</beans>
